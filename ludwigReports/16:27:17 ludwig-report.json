{
  "summary": {
    "dateCreated": "2024-07-15",
    "timeCreated": "16:27:17",
    "activeWorkspace": "devTestFiles [WSL: Ubuntu-24.04]",
    "filepath": "/home/anar/Projects/Ludwig/devTestFiles/JSX/Test1.jsx",
    "errors": 21,
    "warnings": 12
  },
  "details": [
    {
      "ruleId": "jsx-a11y/alt-text",
      "severity": 2,
      "message": "img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",
      "line": 12,
      "column": 7,
      "endLine": 12,
      "endColumn": 30,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/click-events-have-key-events",
      "severity": 2,
      "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
      "line": 26,
      "column": 7,
      "endLine": 29,
      "endColumn": 8,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/interactive-supports-focus",
      "severity": 2,
      "message": "Elements with the 'button' interactive role must be tabbable.",
      "line": 26,
      "column": 7,
      "endLine": 29,
      "endColumn": 8,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/aria-activedescendant-has-tabindex",
      "severity": 1,
      "message": "An element that manages focus with `aria-activedescendant` must have a tabindex",
      "line": 33,
      "column": 7,
      "endLine": 33,
      "endColumn": 46,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/aria-props",
      "severity": 2,
      "message": "aria-props: This attribute is an invalid ARIA attribute.",
      "line": 37,
      "column": 9,
      "endLine": 37,
      "endColumn": 31,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/aria-proptypes",
      "severity": 2,
      "message": "The value for aria-checked must be a boolean or the string \"mixed\".",
      "line": 40,
      "column": 12,
      "endLine": 40,
      "endColumn": 34,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/aria-role",
      "severity": 2,
      "message": "Elements with ARIA roles must use a valid, non-abstract ARIA role.",
      "line": 42,
      "column": 12,
      "endLine": 42,
      "endColumn": 26,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/aria-unsupported-elements",
      "severity": 2,
      "message": "This element does not support ARIA roles, states and properties. Try removing the prop 'aria-hidden'.",
      "line": 44,
      "column": 7,
      "endLine": 44,
      "endColumn": 34,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/click-events-have-key-events",
      "severity": 2,
      "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
      "line": 46,
      "column": 7,
      "endLine": 46,
      "endColumn": 32,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/no-static-element-interactions",
      "severity": 1,
      "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
      "line": 46,
      "column": 7,
      "endLine": 46,
      "endColumn": 32,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/heading-has-content",
      "severity": 2,
      "message": "Headings must have content and the content must be accessible by a screen reader.",
      "line": 48,
      "column": 7,
      "endLine": 48,
      "endColumn": 13,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/html-has-lang",
      "severity": 2,
      "message": "<html> elements must have the lang prop.",
      "line": 50,
      "column": 7,
      "endLine": 50,
      "endColumn": 15,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/iframe-has-title",
      "severity": 2,
      "message": "<iframe> elements must have a unique title property.",
      "line": 52,
      "column": 7,
      "endLine": 52,
      "endColumn": 35,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/img-redundant-alt",
      "severity": 2,
      "message": "Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",
      "line": 54,
      "column": 7,
      "endLine": 57,
      "endColumn": 9,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/anchor-has-content",
      "severity": 2,
      "message": "Anchors must have content and the content must be accessible by a screen reader.",
      "line": 59,
      "column": 7,
      "endLine": 59,
      "endColumn": 39,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/label-has-associated-control",
      "severity": 2,
      "message": "A form label must be associated with a control.",
      "line": 61,
      "column": 7,
      "endLine": 61,
      "endColumn": 14,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/html-has-lang",
      "severity": 2,
      "message": "<html> elements must have the lang prop.",
      "line": 63,
      "column": 7,
      "endLine": 63,
      "endColumn": 23,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/lang",
      "severity": 1,
      "message": "lang attribute must have a valid value.",
      "line": 63,
      "column": 13,
      "endLine": 63,
      "endColumn": 20,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/media-has-caption",
      "severity": 2,
      "message": "Media elements such as <audio> and <video> must have a <track> for captions.",
      "line": 65,
      "column": 7,
      "endLine": 65,
      "endColumn": 32,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/no-access-key",
      "severity": 1,
      "message": "No access key attribute allowed. Inconsistencies between keyboard shortcuts and keyboard commands used by screenreaders and keyboard-only users create a11y complications.",
      "line": 69,
      "column": 7,
      "endLine": 69,
      "endColumn": 28,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/no-autofocus",
      "severity": 1,
      "message": "The autoFocus prop should not be used, as it can reduce usability and accessibility for users.",
      "line": 71,
      "column": 14,
      "endLine": 71,
      "endColumn": 23,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/no-distracting-elements",
      "severity": 1,
      "message": "Do not use <marquee> elements as they can create visual accessibility issues and are deprecated.",
      "line": 73,
      "column": 7,
      "endLine": 73,
      "endColumn": 16,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/click-events-have-key-events",
      "severity": 2,
      "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
      "line": 77,
      "column": 7,
      "endLine": 77,
      "endColumn": 32,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/no-static-element-interactions",
      "severity": 1,
      "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
      "line": 77,
      "column": 7,
      "endLine": 77,
      "endColumn": 32,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/no-noninteractive-tabindex",
      "severity": 1,
      "message": "`tabIndex` should only be declared on interactive elements.",
      "line": 81,
      "column": 12,
      "endLine": 81,
      "endColumn": 24,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/no-onchange",
      "severity": 1,
      "message": "onBlur must be used instead of onchange, unless absolutely necessary and it causes no negative consequences for keyboard only or screen reader users.",
      "line": 83,
      "column": 7,
      "endLine": 83,
      "endColumn": 37,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/click-events-have-key-events",
      "severity": 2,
      "message": "Visible, non-interactive elements with click handlers must have at least one keyboard listener.",
      "line": 87,
      "column": 7,
      "endLine": 87,
      "endColumn": 33,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/no-static-element-interactions",
      "severity": 1,
      "message": "Avoid non-native interactive elements. If using native HTML is not possible, add an appropriate role and support for tabbing, mouse, keyboard, and touch inputs to an interactive content element.",
      "line": 87,
      "column": 7,
      "endLine": 87,
      "endColumn": 33,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/role-has-required-aria-props",
      "severity": 2,
      "message": "Elements with the ARIA role \"switch\" must have the following attributes defined: aria-checked",
      "line": 89,
      "column": 14,
      "endLine": 89,
      "endColumn": 27,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/role-supports-aria-props",
      "severity": 2,
      "message": "The attribute aria-level is not supported by the role checkbox.",
      "line": 91,
      "column": 7,
      "endLine": 94,
      "endColumn": 9,
      "nodeType": "JSXOpeningElement"
    },
    {
      "ruleId": "jsx-a11y/role-has-required-aria-props",
      "severity": 2,
      "message": "Elements with the ARIA role \"checkbox\" must have the following attributes defined: aria-checked",
      "line": 92,
      "column": 9,
      "endLine": 92,
      "endColumn": 24,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/no-noninteractive-tabindex",
      "severity": 1,
      "message": "`tabIndex` should only be declared on interactive elements.",
      "line": 98,
      "column": 12,
      "endLine": 98,
      "endColumn": 24,
      "nodeType": "JSXAttribute"
    },
    {
      "ruleId": "jsx-a11y/tabindex-no-positive",
      "severity": 1,
      "message": "Avoid positive integer values for tabIndex.",
      "line": 98,
      "column": 12,
      "endLine": 98,
      "endColumn": 24,
      "nodeType": "JSXAttribute"
    }
  ]
}